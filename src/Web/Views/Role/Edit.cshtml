@using Dal.Models

@model Role

@Html.Label("People")

@Html.DropDownList("PersonId", (IEnumerable<SelectListItem>)ViewBag.PeopleList, "")
<input type="button" value="Send" onclick="AddPerson()" />





<table class="table">
    <tr>
        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
</table>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function AddPerson() {
        var url = '@Url.Action("AddPerson", "Role")';
        //get the selected value
        var selectedValue = document.getElementById("PersonId").value;
        data = {roleId: @Model.Id, personId: selectedValue};

        $.ajax({
            url: url,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            data: data,
            success: function (data) {}
        });
    }
</script>
